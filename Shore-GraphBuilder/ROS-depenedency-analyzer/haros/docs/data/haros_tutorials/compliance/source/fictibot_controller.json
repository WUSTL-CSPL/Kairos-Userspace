[
  {
    "comment":"Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project's include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config.",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":null,
      "line":null,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/controller_node.cpp",
      "line":5,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"controller_node.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/controller_node.cpp",
      "line":0,
      "class":null
    },
    "rule":"haros_plugin_cpplint:no_copyright"
  },
  {
    "comment":"controller_node.cpp:6:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/controller_node.cpp",
      "line":6,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"controller_node.cpp:15:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/controller_node.cpp",
      "line":15,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"Query found: RosPrimitiveCall(custom_noparam, /, fictibot_msgs/Custom) Location2(package='fictibot_controller', file=u'src/random_controller.cpp', line=41, column=30) (depth 1)\nReported in fictibot_controller/src/random_controller.cpp:41:30",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":30,
      "file":"src/random_controller.cpp",
      "line":41,
      "class":null
    },
    "rule":"user:no_conditional_comm"
  },
  {
    "comment":"Query found: RosPrimitiveCall(custom_w_param, /, fictibot_msgs/Custom) Location2(package='fictibot_controller', file=u'src/random_controller.cpp', line=44, column=30) (depth 1)\nReported in fictibot_controller/src/random_controller.cpp:44:30",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":30,
      "file":"src/random_controller.cpp",
      "line":44,
      "class":null
    },
    "rule":"user:no_conditional_comm"
  },
  {
    "comment":"Query found: RosPrimitiveCall(/stop_cmd, /, std_msgs/Empty) Location2(package='fictibot_controller', file=u'src/random_controller.cpp', line=31, column=30) (depth 0)\nReported in fictibot_controller/src/random_controller.cpp:31:30",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":30,
      "file":"src/random_controller.cpp",
      "line":31,
      "class":null
    },
    "rule":"no_global_names"
  },
  {
    "comment":"Query found: RosPrimitiveCall(/stop_cmd, /, std_msgs/Empty) Location2(package='fictibot_controller', file=u'src/random_controller.cpp', line=31, column=30) (depth 0)\nReported in fictibot_controller/src/random_controller.cpp:31:30",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":30,
      "file":"src/random_controller.cpp",
      "line":31,
      "class":null
    },
    "rule":"user:infinite_queues"
  },
  {
    "comment":"Query found: RosPrimitiveCall(controller_cmd, /, std_msgs/Float64) Location2(package='fictibot_controller', file=u'src/random_controller.cpp', line=29, column=30) (depth 0)\nReported in fictibot_controller/src/random_controller.cpp:29:30",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":30,
      "file":"src/random_controller.cpp",
      "line":29,
      "class":null
    },
    "rule":"user:advertise_queue_1"
  },
  {
    "comment":"Mismatching assignment and comparison, comparison 'left==3' is always false.",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":154,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Mismatching assignment and comparison, comparison 'left==2' is always false.",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":158,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":121,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":122,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":123,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":152,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":153,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"random_controller.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":0,
      "class":null
    },
    "rule":"haros_plugin_cpplint:no_copyright"
  },
  {
    "comment":"random_controller.cpp:4:  Include 'cmath' instead of 'math.h'.  [build/include] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":4,
      "class":null
    },
    "rule":"haros_plugin_cpplint:c_headers"
  },
  {
    "comment":"random_controller.cpp:6:  Found C system header after C++ system header. Should be: random_controller.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":6,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"random_controller.cpp:7:  Found C system header after C++ system header. Should be: random_controller.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":7,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"random_controller.cpp:20:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":20,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:43:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":43,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"random_controller.cpp:43:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":43,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"random_controller.cpp:51:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":51,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":58,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:61:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":61,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":62,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:65:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":65,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:66:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":66,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:69:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":69,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":70,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:73:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":73,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:74:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":74,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:77:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":77,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:78:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":78,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:81:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":81,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:82:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":82,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":87,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:93:  Using C-style cast.  Use static_cast<double>(...) instead  [readability/casting] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":93,
      "class":null
    },
    "rule":"haros_plugin_cpplint:deprecated_casting"
  },
  {
    "comment":"random_controller.cpp:98:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":98,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:101:  Using C-style cast.  Use static_cast<double>(...) instead  [readability/casting] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":101,
      "class":null
    },
    "rule":"haros_plugin_cpplint:deprecated_casting"
  },
  {
    "comment":"random_controller.cpp:104:  Small and focused functions are preferred: RandomController::spin() has 48 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"RandomController::spin()",
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":104,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"random_controller.cpp:108:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":108,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:110:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":110,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:113:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":113,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:114:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":114,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:120:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":120,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:125:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":125,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:128:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":128,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:129:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":129,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:133:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":133,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:136:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":136,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:137:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":137,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:141:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":141,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:144:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":144,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:145:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":145,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:151:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":151,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:155:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":155,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:158:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":158,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:159:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":159,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:162:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":162,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:163:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":163,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:168:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":168,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:171:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":171,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:172:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":172,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:175:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":175,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"random_controller.cpp:176:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":176,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:181:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":181,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"random_controller.cpp:182:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":182,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.cpp:26:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":26,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_what_you_use"
  },
  {
    "comment":"function with cyclomatic complexity 11",
    "resources":[],
    "location":{
      "function":"RandomController::spin",
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":50,
      "class":null
    },
    "rule":"max_cyclomatic_complexity_10"
  },
  {
    "comment":"Function length of 50",
    "resources":[],
    "location":{
      "function":"RandomController::spin",
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":50,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"MI of 56.8372561395",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"src/random_controller.cpp",
      "line":null,
      "class":null
    },
    "rule":"mi_below_65"
  },
  {
    "comment":"random_controller.h:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"include/fictibot_controller/random_controller.h",
      "line":0,
      "class":null
    },
    "rule":"haros_plugin_cpplint:no_copyright"
  },
  {
    "comment":"random_controller.h:1:  #ifndef header guard has wrong style, please use: _TMP_TMPAY5FDP_HAROS_PLUGIN_CPPLINT_RANDOM_CONTROLLER_H_  [build/header_guard] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"include/fictibot_controller/random_controller.h",
      "line":1,
      "class":null
    },
    "rule":"haros_plugin_cpplint:header_guard_format"
  },
  {
    "comment":"random_controller.h:1:  #ifndef header guard has wrong style, please use: RANDOM_CONTROLLER_H  [build/header_guard] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"include/fictibot_controller/random_controller.h",
      "line":1,
      "class":null
    },
    "rule":"haros_plugin_cpplint:header_guard_format"
  },
  {
    "comment":"random_controller.h:43:  #endif line should be \"#endif  // _TMP_TMPAY5FDP_HAROS_PLUGIN_CPPLINT_RANDOM_CONTROLLER_H_\"  [build/header_guard] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"include/fictibot_controller/random_controller.h",
      "line":43,
      "class":null
    },
    "rule":"haros_plugin_cpplint:header_guard_close"
  },
  {
    "comment":"random_controller.h:6:  Include \"fictibot_msgs/Custom.h\" not in alphabetical order  [build/include_alpha] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"include/fictibot_controller/random_controller.h",
      "line":6,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"random_controller.h:9:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"include/fictibot_controller/random_controller.h",
      "line":9,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"random_controller.h:10:  public: should be indented +1 space inside class RandomController  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"include/fictibot_controller/random_controller.h",
      "line":10,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"random_controller.h:11:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& n  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"include/fictibot_controller/random_controller.h",
      "line":11,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"random_controller.h:13:  You don't need a ; after a }  [readability/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"include/fictibot_controller/random_controller.h",
      "line":13,
      "class":null
    },
    "rule":"haros_plugin_cpplint:redundant_empty_statement"
  },
  {
    "comment":"random_controller.h:18:  private: should be indented +1 space inside class RandomController  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"fictibot_controller",
      "column":null,
      "file":"include/fictibot_controller/random_controller.h",
      "line":18,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  }
]