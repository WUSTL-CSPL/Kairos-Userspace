[
  {
    "comment":"Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project's include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":null,
      "line":null,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":67,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"The function 'onInit' is never used.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":62,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:unusedFunction"
  },
  {
    "comment":"nodelet.cpp:45:  Include \"ecl/threads/thread.hpp\" not in alphabetical order  [build/include_alpha] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":45,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"nodelet.cpp:50:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":50,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"nodelet.cpp:53:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":53,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"nodelet.cpp:54:  public: should be indented +1 space inside class SafetyControllerNodelet  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":54,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"nodelet.cpp:55:  You don't need a ; after a }  [readability/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":55,
      "class":null
    },
    "rule":"haros_plugin_cpplint:redundant_empty_statement"
  },
  {
    "comment":"nodelet.cpp:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":57,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"nodelet.cpp:63:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":63,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"nodelet.cpp:72:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":72,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"nodelet.cpp:73:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":73,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"nodelet.cpp:77:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":77,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"nodelet.cpp:78:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":78,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"nodelet.cpp:79:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":79,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"nodelet.cpp:82:  private: should be indented +1 space inside class SafetyControllerNodelet  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":82,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"nodelet.cpp:84:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":84,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"nodelet.cpp:86:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":86,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"nodelet.cpp:87:  Extra space for operator !   [whitespace/operators] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":87,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_unary_op"
  },
  {
    "comment":"nodelet.cpp:88:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":88,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"nodelet.cpp:99:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":99,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"nodelet.cpp:66:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"src/nodelet.cpp",
      "line":66,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_what_you_use"
  },
  {
    "comment":"Halstead volume of 12140.5910919",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_volume_above_8000"
  },
  {
    "comment":"Halstead Bugs of 4.0468636973",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_bugs_above_2"
  },
  {
    "comment":"safety_controller.hpp:53:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":53,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"safety_controller.hpp:54:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":54,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"safety_controller.hpp:55:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":55,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"safety_controller.hpp:56:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":56,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"safety_controller.hpp:57:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":57,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"safety_controller.hpp:58:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":58,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"safety_controller.hpp:59:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":59,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"safety_controller.hpp:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":62,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:76:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":76,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:77:  public: should be indented +1 space inside class SafetyController  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":77,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"safety_controller.hpp:78:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& nh  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":78,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"safety_controller.hpp:78:  Is this a non-const reference? If so, make const or use a pointer: std::string& name  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":78,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"safety_controller.hpp:89:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":89,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_end_line"
  },
  {
    "comment":"safety_controller.hpp:91:  You don't need a ; after a }  [readability/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":91,
      "class":null
    },
    "rule":"haros_plugin_cpplint:redundant_empty_statement"
  },
  {
    "comment":"safety_controller.hpp:92:  You don't need a ; after a }  [readability/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":92,
      "class":null
    },
    "rule":"haros_plugin_cpplint:redundant_empty_statement"
  },
  {
    "comment":"safety_controller.hpp:99:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":99,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:100:  Should have a space between // and comment  [whitespace/comments] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":100,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comment_text"
  },
  {
    "comment":"safety_controller.hpp:102:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":102,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:103:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":103,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:104:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":104,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:105:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":105,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:106:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":106,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:107:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":107,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:108:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":108,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:109:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":109,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:110:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":110,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:119:  private: should be indented +1 space inside class SafetyController  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":119,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"safety_controller.hpp:123:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":123,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:132:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":132,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"safety_controller.hpp:177:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":177,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:179:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":179,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:182:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":182,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:183:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":183,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:189:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":189,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:191:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":191,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:194:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":194,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:195:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":195,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:201:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":201,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:203:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":203,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:207:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":207,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:208:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":208,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:209:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":209,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:210:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":210,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:213:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":213,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:213:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":213,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"safety_controller.hpp:214:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":214,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:215:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":215,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:217:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":217,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:218:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":218,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:219:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":219,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:220:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":220,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:226:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":226,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:228:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":228,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:232:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":232,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:233:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":233,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:234:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":234,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:235:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":235,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:238:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":238,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:238:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":238,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"safety_controller.hpp:239:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":239,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:240:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":240,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:242:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":242,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:243:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":243,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:244:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":244,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:245:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":245,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:250:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":250,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:251:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":251,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:253:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":253,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:256:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":256,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:260:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":260,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:260:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":260,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"safety_controller.hpp:261:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":261,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:266:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":266,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:266:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":266,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"safety_controller.hpp:267:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":267,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:270:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":270,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:274:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":274,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:274:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":274,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"safety_controller.hpp:275:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":275,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:280:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":280,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:281:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":281,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:287:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":287,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:296:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":296,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:300:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":300,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:302:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":302,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:304:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":304,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:314:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":314,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:315:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":315,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:325:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":325,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:326:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":326,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:337:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":337,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:338:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":338,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"safety_controller.hpp:349:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":349,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"safety_controller.hpp:349:  Should have a space between // and comment  [whitespace/comments] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":349,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comment_text"
  },
  {
    "comment":"safety_controller.hpp:350:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":350,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_end_line"
  },
  {
    "comment":"safety_controller.hpp:350:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":350,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"safety_controller.hpp:350:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":350,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_braces"
  },
  {
    "comment":"safety_controller.hpp:351:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":351,
      "class":null
    },
    "rule":"haros_plugin_cpplint:two_space_indent"
  },
  {
    "comment":"safety_controller.hpp:351:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":351,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"safety_controller.hpp:357:  Small and focused functions are preferred: SafetyController::spin() has 53 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"SafetyController::spin()",
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":357,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"safety_controller.hpp:357:  Small and focused functions are preferred: SafetyController::spin() has 53 non-comment lines (error triggered by exceeding 50 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"SafetyController::spin()",
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":357,
      "class":null
    },
    "rule":"max_eloc_50"
  },
  {
    "comment":"safety_controller.hpp:357:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":357,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"function with cyclomatic complexity 12",
    "resources":[],
    "location":{
      "function":"kobuki::SafetyController::spin",
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":299,
      "class":null
    },
    "rule":"max_cyclomatic_complexity_10"
  },
  {
    "comment":"Function length of 54",
    "resources":[],
    "location":{
      "function":"kobuki::SafetyController::spin",
      "package":"kobuki_safety_controller",
      "column":null,
      "file":"include/kobuki_safety_controller/safety_controller.hpp",
      "line":299,
      "class":null
    },
    "rule":"max_function_length_40"
  }
]