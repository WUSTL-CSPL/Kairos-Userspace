[
  {
    "comment":"Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project's include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":null,
      "line":null,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Halstead volume of 19390.0408688",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_volume_above_8000"
  },
  {
    "comment":"Halstead Bugs of 6.46334695628",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_bugs_above_2"
  },
  {
    "comment":"kobuki_ros.cpp:39:  Include 'cfloat' instead of 'float.h'.  [build/include] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":39,
      "class":null
    },
    "rule":"haros_plugin_cpplint:c_headers"
  },
  {
    "comment":"kobuki_ros.cpp:41:  Include \"ecl/streams/string_stream.hpp\" not in alphabetical order  [build/include_alpha] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":41,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.cpp:50:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":50,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:81:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":81,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:100:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":100,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:101:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":101,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:105:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":105,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:139:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":139,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:142:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":142,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:144:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":144,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:144:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":144,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_ros.cpp:146:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":146,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:147:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":147,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:156:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":156,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:157:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":157,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:161:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":161,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:164:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":164,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"kobuki_ros.cpp:165:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":165,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:167:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":167,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:171:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":171,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:176:  Missing space after ,  [whitespace/comma] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":176,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_comma"
  },
  {
    "comment":"kobuki_ros.cpp:177:  Missing space after ,  [whitespace/comma] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":177,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_comma"
  },
  {
    "comment":"kobuki_ros.cpp:178:  Missing space after ,  [whitespace/comma] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":178,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_comma"
  },
  {
    "comment":"kobuki_ros.cpp:184:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":184,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:185:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":185,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:189:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":189,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"kobuki_ros.cpp:190:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":190,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:192:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":192,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:195:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":195,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"kobuki_ros.cpp:196:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":196,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:199:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":199,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:209:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":209,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:211:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":211,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_ros.cpp:212:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":212,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"kobuki_ros.cpp:214:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":214,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:219:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":219,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:221:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":221,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:224:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":224,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:238:  Small and focused functions are preferred: KobukiRos::init() has 101 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"KobukiRos::init()",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":238,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"kobuki_ros.cpp:238:  Small and focused functions are preferred: KobukiRos::init() has 101 non-comment lines (error triggered by exceeding 50 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"KobukiRos::init()",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":238,
      "class":null
    },
    "rule":"max_eloc_50"
  },
  {
    "comment":"kobuki_ros.cpp:238:  Small and focused functions are preferred: KobukiRos::init() has 101 non-comment lines (error triggered by exceeding 70 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"KobukiRos::init()",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":238,
      "class":null
    },
    "rule":"max_eloc_70"
  },
  {
    "comment":"kobuki_ros.cpp:249:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":249,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:251:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":251,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:252:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":252,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:257:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":257,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:259:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":259,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:262:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":262,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:265:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":265,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"kobuki_ros.cpp:266:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":266,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:272:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":272,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:274:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":274,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:275:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":275,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:278:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":278,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"kobuki_ros.cpp:279:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":279,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:286:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":286,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:297:  Small and focused functions are preferred: KobukiRos::update() has 44 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"KobukiRos::update()",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":297,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"kobuki_ros.cpp:304:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":304,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:308:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":308,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:308:  Missing space after ,  [whitespace/comma] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":308,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_comma"
  },
  {
    "comment":"kobuki_ros.cpp:313:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":313,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:313:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":313,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_ros.cpp:314:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":314,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:314:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":314,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_ros.cpp:315:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":315,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:316:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":316,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:317:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":317,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:318:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":318,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:319:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":319,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:320:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":320,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:321:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":321,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:321:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":321,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_ros.cpp:322:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":322,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:323:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":323,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:324:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":324,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:325:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":325,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:326:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":326,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:327:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":327,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:328:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":328,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:336:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":336,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.cpp:337:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":337,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:338:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":338,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:339:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":339,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:340:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":340,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:341:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":341,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:342:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":342,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:343:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":343,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:344:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":344,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:345:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":345,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.cpp:349:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":349,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_ros.cpp:345:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":345,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_what_you_use"
  },
  {
    "comment":"Function length of 103",
    "resources":[],
    "location":{
      "function":"kobuki::KobukiRos::init",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":104,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"Function length of 46",
    "resources":[],
    "location":{
      "function":"kobuki::KobukiRos::update",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/kobuki_ros.cpp",
      "line":248,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"Halstead volume of 9591.36599193",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_volume_above_8000"
  },
  {
    "comment":"Halstead Bugs of 3.19712199731",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_bugs_above_2"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":96,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":124,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"subscriber_callbacks.cpp:47:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":47,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:54:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":54,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:56:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":56,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:59:  Should have a space between // and comment  [whitespace/comments] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":59,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comment_text"
  },
  {
    "comment":"subscriber_callbacks.cpp:60:  Should have a space between // and comment  [whitespace/comments] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":60,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comment_text"
  },
  {
    "comment":"subscriber_callbacks.cpp:61:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":61,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"subscriber_callbacks.cpp:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":70,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:71:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":71,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:71:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":71,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"subscriber_callbacks.cpp:72:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":72,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"subscriber_callbacks.cpp:73:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":73,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_end_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:73:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":73,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"subscriber_callbacks.cpp:74:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":74,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"subscriber_callbacks.cpp:75:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":75,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"subscriber_callbacks.cpp:82:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":82,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:83:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":83,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:83:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":83,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"subscriber_callbacks.cpp:84:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":84,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"subscriber_callbacks.cpp:85:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":85,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"subscriber_callbacks.cpp:86:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":86,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"subscriber_callbacks.cpp:87:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":87,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"subscriber_callbacks.cpp:93:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":93,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"subscriber_callbacks.cpp:94:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":94,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:104:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":104,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"subscriber_callbacks.cpp:105:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":105,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:111:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":111,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:112:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":112,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"subscriber_callbacks.cpp:117:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":117,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:125:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":125,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:127:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":127,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:129:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":129,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:130:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":130,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"subscriber_callbacks.cpp:134:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":134,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:135:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":135,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:136:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":136,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"subscriber_callbacks.cpp:140:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":140,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"subscriber_callbacks.cpp:142:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":142,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:143:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":143,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:144:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":144,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"subscriber_callbacks.cpp:144:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":144,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"subscriber_callbacks.cpp:150:  Small and focused functions are preferred: KobukiRos::subscribeExternalPowerCommand() has 43 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"KobukiRos::subscribeExternalPowerCommand()",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":150,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"subscriber_callbacks.cpp:156:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":156,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:158:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":158,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:161:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":161,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:162:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":162,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:165:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":165,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:166:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":166,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:169:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":169,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:170:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":170,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:173:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":173,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:174:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":174,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:177:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":177,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:178:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":178,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:181:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":181,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:182:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":182,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:185:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":185,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:186:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":186,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:187:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":187,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"subscriber_callbacks.cpp:196:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":196,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:198:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":198,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"subscriber_callbacks.cpp:200:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":200,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"subscriber_callbacks.cpp:208:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":208,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:210:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":210,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:215:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":215,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:216:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":216,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:221:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":221,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:222:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":222,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:223:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":223,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"subscriber_callbacks.cpp:228:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":228,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"subscriber_callbacks.cpp:229:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":229,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"subscriber_callbacks.cpp:230:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":230,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"subscriber_callbacks.cpp:230:  Missing space before ( in if(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":230,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"subscriber_callbacks.cpp:230:  Mismatching spaces inside () in if  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":230,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_inside_paren"
  },
  {
    "comment":"subscriber_callbacks.cpp:231:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":231,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"subscriber_callbacks.cpp:241:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":241,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"Function length of 45",
    "resources":[],
    "location":{
      "function":"kobuki::KobukiRos::subscribeExternalPowerCommand",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/subscriber_callbacks.cpp",
      "line":104,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"Halstead volume of 8944.54979685",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_volume_above_8000"
  },
  {
    "comment":"Halstead Bugs of 2.98151659895",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_bugs_above_2"
  },
  {
    "comment":"Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":99,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":100,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":101,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":111,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":112,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":113,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":123,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":124,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":155,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":156,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"The function 'run' is never used.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":25,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:unusedFunction"
  },
  {
    "comment":"diagnostics.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":0,
      "class":null
    },
    "rule":"haros_plugin_cpplint:no_copyright"
  },
  {
    "comment":"diagnostics.cpp:19:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":19,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:25:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":25,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:26:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":26,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:27:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":27,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:27:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":27,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"diagnostics.cpp:27:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":27,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"diagnostics.cpp:31:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":31,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:31:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":31,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"diagnostics.cpp:31:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":31,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"diagnostics.cpp:35:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":35,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:35:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":35,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"diagnostics.cpp:35:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":35,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"diagnostics.cpp:39:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":39,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:39:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":39,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"diagnostics.cpp:39:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":39,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"diagnostics.cpp:48:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":48,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"diagnostics.cpp:48:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":48,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"diagnostics.cpp:48:  Missing username in TODO; it should look like \"// TODO(my_username): Stuff.\"  [readability/todo] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":48,
      "class":null
    },
    "rule":"haros_plugin_cpplint:todo_format"
  },
  {
    "comment":"diagnostics.cpp:50:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":50,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:50:  Mismatching spaces inside () in switch  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":50,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_inside_paren"
  },
  {
    "comment":"diagnostics.cpp:51:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":51,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:55:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":55,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:59:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":59,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:64:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":64,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:65:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":65,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:65:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":65,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"diagnostics.cpp:65:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":65,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"diagnostics.cpp:66:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":66,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"diagnostics.cpp:67:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":67,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"diagnostics.cpp:67:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":67,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"diagnostics.cpp:67:  Missing username in TODO; it should look like \"// TODO(my_username): Stuff.\"  [readability/todo] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":67,
      "class":null
    },
    "rule":"haros_plugin_cpplint:todo_format"
  },
  {
    "comment":"diagnostics.cpp:70:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":70,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:70:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":70,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"diagnostics.cpp:70:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":70,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"diagnostics.cpp:72:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":72,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"diagnostics.cpp:72:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":72,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"diagnostics.cpp:72:  Missing username in TODO; it should look like \"// TODO(my_username): Stuff.\"  [readability/todo] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":72,
      "class":null
    },
    "rule":"haros_plugin_cpplint:todo_format"
  },
  {
    "comment":"diagnostics.cpp:75:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":75,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:75:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":75,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"diagnostics.cpp:75:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":75,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"diagnostics.cpp:82:  Small and focused functions are preferred: BatteryTask::run() has 54 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"BatteryTask::run()",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":82,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"diagnostics.cpp:82:  Small and focused functions are preferred: BatteryTask::run() has 54 non-comment lines (error triggered by exceeding 50 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"BatteryTask::run()",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":82,
      "class":null
    },
    "rule":"max_eloc_50"
  },
  {
    "comment":"diagnostics.cpp:84:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":84,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:85:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":85,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:87:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":87,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:87:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":87,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"diagnostics.cpp:92:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":92,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:93:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":93,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:95:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":95,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:95:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":95,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"diagnostics.cpp:99:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":99,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"diagnostics.cpp:100:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":100,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"diagnostics.cpp:101:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":101,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"diagnostics.cpp:104:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":104,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:105:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":105,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:107:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":107,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:107:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":107,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"diagnostics.cpp:116:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":116,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:117:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":117,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:119:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":119,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:119:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":119,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"diagnostics.cpp:127:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":127,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:128:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":128,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"diagnostics.cpp:128:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":128,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:128:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":128,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"diagnostics.cpp:128:  Missing username in TODO; it should look like \"// TODO(my_username): Stuff.\"  [readability/todo] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":128,
      "class":null
    },
    "rule":"haros_plugin_cpplint:todo_format"
  },
  {
    "comment":"diagnostics.cpp:129:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":129,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"diagnostics.cpp:130:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":130,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:130:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":130,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"diagnostics.cpp:138:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":138,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:141:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":141,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:141:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":141,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"diagnostics.cpp:145:  Using deprecated casting style.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":145,
      "class":null
    },
    "rule":"haros_plugin_cpplint:deprecated_casting"
  },
  {
    "comment":"diagnostics.cpp:148:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":148,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:150:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":150,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"diagnostics.cpp:153:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":153,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:159:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":159,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.cpp:164:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":164,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"diagnostics.cpp:128:  Add #include <algorithm> for max  [build/include_what_you_use] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":128,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_what_you_use"
  },
  {
    "comment":"function with cyclomatic complexity 11",
    "resources":[],
    "location":{
      "function":"kobuki::BatteryTask::run",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":25,
      "class":null
    },
    "rule":"max_cyclomatic_complexity_10"
  },
  {
    "comment":"Function length of 56",
    "resources":[],
    "location":{
      "function":"kobuki::BatteryTask::run",
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/diagnostics.cpp",
      "line":25,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"Halstead Bugs of 2.38563228887",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_bugs_above_2"
  },
  {
    "comment":"odometry.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":0,
      "class":null
    },
    "rule":"haros_plugin_cpplint:no_copyright"
  },
  {
    "comment":"odometry.cpp:20:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":20,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:26:  Extra space before ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":26,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"odometry.cpp:33:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":33,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:37:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":37,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:39:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":39,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:40:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":40,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:41:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":41,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:41:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":41,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"odometry.cpp:42:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":42,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:45:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":45,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:46:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":46,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:47:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":47,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:47:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":47,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"odometry.cpp:48:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":48,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:51:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":51,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:52:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":52,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:53:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":53,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:53:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":53,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"odometry.cpp:54:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":54,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:56:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":56,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:56:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":56,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"odometry.cpp:57:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":57,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:61:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":61,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:62:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":62,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:63:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":63,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:63:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":63,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"odometry.cpp:64:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":64,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:66:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":66,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:66:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":66,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"odometry.cpp:67:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":67,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:76:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":76,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:76:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":76,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"odometry.cpp:79:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":79,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:80:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":80,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:80:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":80,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:82:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":82,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:82:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":82,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"odometry.cpp:87:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":87,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:88:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":88,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:97:  Should have a space between // and comment  [whitespace/comments] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":97,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comment_text"
  },
  {
    "comment":"odometry.cpp:98:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":98,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:100:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":100,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.cpp:111:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":111,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"odometry.cpp:124:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":124,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:125:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":125,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"odometry.cpp:126:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":126,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.cpp:152:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":152,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"odometry.cpp:153:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":153,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"odometry.cpp:154:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":154,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"odometry.cpp:159:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":159,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"odometry.cpp:33:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/odometry.cpp",
      "line":33,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_what_you_use"
  },
  {
    "comment":"Halstead volume of 20376.1535432",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_volume_above_8000"
  },
  {
    "comment":"Halstead Bugs of 6.79205118108",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_bugs_above_2"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":89,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":163,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":164,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":376,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":458,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"slot_callbacks.cpp:47:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":47,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:49:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":49,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":62,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:63:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":63,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:64:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":64,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:68:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":68,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"slot_callbacks.cpp:99:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":99,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:104:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":104,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:105:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":105,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:108:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":108,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:111:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":111,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:118:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":118,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:120:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":120,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:122:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":122,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:123:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":123,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:129:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":129,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:131:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":131,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:132:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":132,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:133:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":133,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:153:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":153,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:155:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":155,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:156:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":156,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:161:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":161,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"slot_callbacks.cpp:162:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":162,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:162:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":162,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"slot_callbacks.cpp:164:  Missing spaces around =  [whitespace/operators] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":164,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_assign"
  },
  {
    "comment":"slot_callbacks.cpp:164:  Missing spaces around <  [whitespace/operators] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":164,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_binary_op"
  },
  {
    "comment":"slot_callbacks.cpp:164:  Missing space before ( in for(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":164,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:164:  Mismatching spaces inside () in for  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":164,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_inside_paren"
  },
  {
    "comment":"slot_callbacks.cpp:166:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":166,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:166:  Should have a space between // and comment  [whitespace/comments] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":166,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comment_text"
  },
  {
    "comment":"slot_callbacks.cpp:169:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":169,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:174:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":174,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:175:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":175,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:175:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":175,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"slot_callbacks.cpp:175:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":175,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"slot_callbacks.cpp:175:  Use int16/int64/etc, rather than the C type short  [runtime/int] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":175,
      "class":null
    },
    "rule":"haros_plugin_cpplint:c_types"
  },
  {
    "comment":"slot_callbacks.cpp:176:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":176,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:176:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":176,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"slot_callbacks.cpp:176:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":176,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"slot_callbacks.cpp:176:  Use int16/int64/etc, rather than the C type short  [runtime/int] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":176,
      "class":null
    },
    "rule":"haros_plugin_cpplint:c_types"
  },
  {
    "comment":"slot_callbacks.cpp:177:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":177,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:177:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":177,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"slot_callbacks.cpp:177:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":177,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"slot_callbacks.cpp:177:  Use int16/int64/etc, rather than the C type short  [runtime/int] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":177,
      "class":null
    },
    "rule":"haros_plugin_cpplint:c_types"
  },
  {
    "comment":"slot_callbacks.cpp:185:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":185,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:187:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":187,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:189:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":189,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:192:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":192,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:198:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":198,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"slot_callbacks.cpp:198:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":198,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"slot_callbacks.cpp:199:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":199,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"slot_callbacks.cpp:199:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":199,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"slot_callbacks.cpp:200:  Extra space after ( in function call  [whitespace/parens] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":200,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_after_paren"
  },
  {
    "comment":"slot_callbacks.cpp:200:  Extra space before )  [whitespace/parens] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":200,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren"
  },
  {
    "comment":"slot_callbacks.cpp:217:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":217,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:219:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":219,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:233:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":233,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:238:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":238,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:248:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":248,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:250:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":250,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:255:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":255,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:256:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":256,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:257:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":257,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:268:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":268,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:270:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":270,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:272:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":272,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:272:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":272,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:273:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":273,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:273:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":273,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:274:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":274,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:274:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":274,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:277:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":277,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:277:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":277,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:278:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":278,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:278:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":278,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:279:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":279,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:279:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":279,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:280:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":280,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:280:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":280,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:288:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":288,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:290:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":290,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:292:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":292,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:292:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":292,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:293:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":293,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:293:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":293,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:294:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":294,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:294:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":294,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:297:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":297,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:297:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":297,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:298:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":298,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:298:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":298,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:299:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":299,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:299:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":299,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:300:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":300,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:300:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":300,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:308:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":308,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:310:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":310,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:312:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":312,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:312:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":312,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:313:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":313,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:313:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":313,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:314:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":314,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:314:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":314,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:317:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":317,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:317:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":317,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:318:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":318,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:318:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":318,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:319:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":319,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:319:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":319,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:320:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":320,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:320:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":320,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:329:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":329,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:331:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":331,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:333:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":333,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:333:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":333,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:334:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":334,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:334:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":334,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:335:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":335,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:335:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":335,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:338:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":338,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:338:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":338,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:339:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":339,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:339:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":339,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:340:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":340,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:340:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":340,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:348:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":348,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:350:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":350,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:352:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":352,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:352:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":352,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:354:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":354,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:356:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":356,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:356:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":356,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:358:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":358,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:358:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":358,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:360:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":360,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:360:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":360,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:362:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":362,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:364:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":364,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:364:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":364,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:372:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":372,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:374:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":374,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:383:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":383,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:385:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":385,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:387:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":387,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:387:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":387,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_paren_if"
  },
  {
    "comment":"slot_callbacks.cpp:388:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":388,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:388:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":388,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:389:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":389,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:389:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":389,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"slot_callbacks.cpp:411:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":411,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:412:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":412,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:412:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":412,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:412:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":412,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"slot_callbacks.cpp:415:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":415,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"slot_callbacks.cpp:419:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":419,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:438:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":438,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:439:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":439,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:439:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":439,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:439:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":439,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"slot_callbacks.cpp:456:  Extra space before last semicolon. If this should be an empty statement, use {} instead.  [whitespace/semicolon] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":456,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_semicolon"
  },
  {
    "comment":"slot_callbacks.cpp:459:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":459,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:461:  Should have a space between // and comment  [whitespace/comments] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":461,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comment_text"
  },
  {
    "comment":"slot_callbacks.cpp:465:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":465,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:472:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":472,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"slot_callbacks.cpp:472:  Use int16/int64/etc, rather than the C type short  [runtime/int] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":472,
      "class":null
    },
    "rule":"haros_plugin_cpplint:c_types"
  },
  {
    "comment":"slot_callbacks.cpp:473:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":473,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:474:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":474,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"slot_callbacks.cpp:478:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":478,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"slot_callbacks.cpp:485:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":485,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"slot_callbacks.cpp:472:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/library/slot_callbacks.cpp",
      "line":472,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_what_you_use"
  },
  {
    "comment":"The function 'onInit' is never used.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":58,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:unusedFunction"
  },
  {
    "comment":"kobuki_nodelet.cpp:41:  Include \"ecl/threads/thread.hpp\" not in alphabetical order  [build/include_alpha] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":41,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_nodelet.cpp:46:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":46,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_nodelet.cpp:49:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":49,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_nodelet.cpp:50:  public: should be indented +1 space inside class KobukiNodelet  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":50,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"kobuki_nodelet.cpp:51:  You don't need a ; after a }  [readability/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":51,
      "class":null
    },
    "rule":"haros_plugin_cpplint:redundant_empty_statement"
  },
  {
    "comment":"kobuki_nodelet.cpp:53:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":53,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_nodelet.cpp:59:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":59,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_nodelet.cpp:63:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":63,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_nodelet.cpp:65:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":65,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_nodelet.cpp:69:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":69,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"kobuki_nodelet.cpp:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":70,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_nodelet.cpp:74:  private: should be indented +1 space inside class KobukiNodelet  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":74,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"kobuki_nodelet.cpp:76:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":76,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_nodelet.cpp:79:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":79,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_nodelet.cpp:89:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":89,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_nodelet.cpp:61:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"src/nodelet/kobuki_nodelet.cpp",
      "line":61,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_what_you_use"
  },
  {
    "comment":"Halstead volume of 10089.8182085",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_volume_above_8000"
  },
  {
    "comment":"Halstead Bugs of 3.36327273618",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_bugs_above_2"
  },
  {
    "comment":"Class 'KobukiRos' has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":87,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"kobuki_ros.hpp:48:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":48,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:50:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":50,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:51:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":51,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:52:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":52,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:53:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":53,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:54:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":54,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:55:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":55,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:56:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":56,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:57:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":57,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:58:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":58,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:59:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":59,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:60:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":60,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:61:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":61,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:62:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":62,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:63:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":63,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:64:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":64,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:65:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":65,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:66:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":66,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:67:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":67,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:68:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":68,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:69:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":69,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:70:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":70,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:71:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":71,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:72:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":72,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:73:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":73,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:74:  Found C system header after C++ system header. Should be: kobuki_ros.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":74,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"kobuki_ros.hpp:83:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":83,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.hpp:85:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":85,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"kobuki_ros.hpp:86:  public: should be indented +1 space inside class KobukiRos  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":86,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"kobuki_ros.hpp:87:  Is this a non-const reference? If so, make const or use a pointer: std::string& node_name  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":87,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"kobuki_ros.hpp:87:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":87,
      "class":null
    },
    "rule":"haros_plugin_cpplint:explicit_constructors"
  },
  {
    "comment":"kobuki_ros.hpp:89:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& nh  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":89,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"kobuki_ros.hpp:89:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& nh_pub  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":89,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"kobuki_ros.hpp:93:  private: should be indented +1 space inside class KobukiRos  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":93,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"kobuki_ros.hpp:97:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":97,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_ros.hpp:101:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":101,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:101:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":101,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_ros.hpp:102:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":102,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:102:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":102,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_ros.hpp:108:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":108,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:109:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":109,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:110:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":110,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:111:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":111,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:113:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":113,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:115:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":115,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:118:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& nh  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":118,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"kobuki_ros.hpp:119:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& nh  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":119,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"kobuki_ros.hpp:132:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":132,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:151:  Use int16/int64/etc, rather than the C type short  [runtime/int] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":151,
      "class":null
    },
    "rule":"haros_plugin_cpplint:c_types"
  },
  {
    "comment":"kobuki_ros.hpp:174:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":174,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:177:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":177,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:178:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":178,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"kobuki_ros.hpp:179:  Missing spaces around ==  [whitespace/operators] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":179,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_binary_op"
  },
  {
    "comment":"kobuki_ros.hpp:180:  Missing spaces around ==  [whitespace/operators] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":180,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_binary_op"
  },
  {
    "comment":"kobuki_ros.hpp:181:  Missing spaces around ==  [whitespace/operators] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":181,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_binary_op"
  },
  {
    "comment":"kobuki_ros.hpp:183:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":183,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_braces"
  },
  {
    "comment":"kobuki_ros.hpp:184:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":184,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_braces"
  },
  {
    "comment":"kobuki_ros.hpp:185:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":185,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_braces"
  },
  {
    "comment":"kobuki_ros.hpp:186:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":186,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_braces"
  },
  {
    "comment":"kobuki_ros.hpp:188:  Missing spaces around ==  [whitespace/operators] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":188,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_binary_op"
  },
  {
    "comment":"kobuki_ros.hpp:189:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":189,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:190:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":190,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:190:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":190,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_braces"
  },
  {
    "comment":"kobuki_ros.hpp:191:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":191,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:191:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":191,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_braces"
  },
  {
    "comment":"kobuki_ros.hpp:192:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":192,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:192:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":192,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_braces"
  },
  {
    "comment":"kobuki_ros.hpp:193:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":193,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"kobuki_ros.hpp:193:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":193,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_braces"
  },
  {
    "comment":"kobuki_ros.hpp:197:  Is this a non-const reference? If so, make const or use a pointer: Command::Buffer &buffer  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":197,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"kobuki_ros.hpp:198:  Is this a non-const reference? If so, make const or use a pointer: PacketFinder::BufferType &buffer  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":198,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"kobuki_ros.hpp:199:  Use int16/int64/etc, rather than the C type short  [runtime/int] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":199,
      "class":null
    },
    "rule":"haros_plugin_cpplint:c_types"
  },
  {
    "comment":"kobuki_ros.hpp:217:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":217,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"kobuki_ros.hpp:199:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":199,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_what_you_use"
  },
  {
    "comment":"function with cyclomatic complexity 15",
    "resources":[],
    "location":{
      "function":"kobuki::KobukiRos::rosNamed",
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/kobuki_ros.hpp",
      "line":178,
      "class":null
    },
    "rule":"max_cyclomatic_complexity_10"
  },
  {
    "comment":"Member variable 'CliffSensorTask::status' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":68,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'WallSensorTask::status' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":84,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'WheelDropTask::status' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":97,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'MotorStateTask::state' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":124,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'GyroSensorTask::heading' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":137,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'DigitalInputTask::status' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":150,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'CliffSensorTask::status' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":68,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'WallSensorTask::status' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":84,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'WheelDropTask::status' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":97,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'MotorStateTask::state' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":124,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'GyroSensorTask::heading' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":137,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"Member variable 'DigitalInputTask::status' is not initialized in the constructor.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":150,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:uninitMemberVar"
  },
  {
    "comment":"diagnostics.hpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":0,
      "class":null
    },
    "rule":"haros_plugin_cpplint:no_copyright"
  },
  {
    "comment":"diagnostics.hpp:21:  Include \"kobuki_driver/modules/battery.hpp\" not in alphabetical order  [build/include_alpha] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":21,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"diagnostics.hpp:23:  Include \"diagnostic_updater/diagnostic_updater.h\" not in alphabetical order  [build/include_alpha] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":23,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"diagnostics.hpp:29:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":29,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:39:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":39,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:40:  public: should be indented +1 space inside class BatteryTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":40,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:42:  Is this a non-const reference? If so, make const or use a pointer: diagnostic_updater::DiagnosticStatusWrapper &stat  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":42,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"diagnostics.hpp:45:  private: should be indented +1 space inside class BatteryTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":45,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:52:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":52,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:53:  public: should be indented +1 space inside class WatchdogTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":53,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:55:  Is this a non-const reference? If so, make const or use a pointer: diagnostic_updater::DiagnosticStatusWrapper &stat  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":55,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"diagnostics.hpp:59:  private: should be indented +1 space inside class WatchdogTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":59,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:66:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":66,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:67:  public: should be indented +1 space inside class CliffSensorTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":67,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:69:  Is this a non-const reference? If so, make const or use a pointer: diagnostic_updater::DiagnosticStatusWrapper &stat  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":69,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"diagnostics.hpp:70:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":70,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:71:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":71,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"diagnostics.hpp:74:  private: should be indented +1 space inside class CliffSensorTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":74,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:82:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":82,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:83:  public: should be indented +1 space inside class WallSensorTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":83,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:85:  Is this a non-const reference? If so, make const or use a pointer: diagnostic_updater::DiagnosticStatusWrapper &stat  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":85,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"diagnostics.hpp:88:  private: should be indented +1 space inside class WallSensorTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":88,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:95:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":95,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:96:  public: should be indented +1 space inside class WheelDropTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":96,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:98:  Is this a non-const reference? If so, make const or use a pointer: diagnostic_updater::DiagnosticStatusWrapper &stat  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":98,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"diagnostics.hpp:101:  private: should be indented +1 space inside class WheelDropTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":101,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:109:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":109,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:110:  public: should be indented +1 space inside class MotorCurrentTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":110,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:112:  Is this a non-const reference? If so, make const or use a pointer: diagnostic_updater::DiagnosticStatusWrapper &stat  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":112,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"diagnostics.hpp:115:  private: should be indented +1 space inside class MotorCurrentTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":115,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:122:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":122,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:123:  public: should be indented +1 space inside class MotorStateTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":123,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:125:  Is this a non-const reference? If so, make const or use a pointer: diagnostic_updater::DiagnosticStatusWrapper &stat  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":125,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"diagnostics.hpp:126:  More than one command on the same line  [whitespace/newline] [0]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":126,
      "class":null
    },
    "rule":"haros_plugin_cpplint:one_command_per_line"
  },
  {
    "comment":"diagnostics.hpp:126:  You don't need a ; after a }  [readability/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":126,
      "class":null
    },
    "rule":"haros_plugin_cpplint:redundant_empty_statement"
  },
  {
    "comment":"diagnostics.hpp:128:  private: should be indented +1 space inside class MotorStateTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":128,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:135:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":135,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:136:  public: should be indented +1 space inside class GyroSensorTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":136,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:138:  Is this a non-const reference? If so, make const or use a pointer: diagnostic_updater::DiagnosticStatusWrapper &stat  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":138,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"diagnostics.hpp:141:  private: should be indented +1 space inside class GyroSensorTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":141,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:148:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":148,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:149:  public: should be indented +1 space inside class DigitalInputTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":149,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:151:  Is this a non-const reference? If so, make const or use a pointer: diagnostic_updater::DiagnosticStatusWrapper &stat  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":151,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"diagnostics.hpp:154:  private: should be indented +1 space inside class DigitalInputTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":154,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:161:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":161,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"diagnostics.hpp:162:  public: should be indented +1 space inside class AnalogInputTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":162,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:164:  Is this a non-const reference? If so, make const or use a pointer: diagnostic_updater::DiagnosticStatusWrapper &stat  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":164,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"diagnostics.hpp:167:  private: should be indented +1 space inside class AnalogInputTask  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":167,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"diagnostics.hpp:171:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":171,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"diagnostics.hpp:168:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/diagnostics.hpp",
      "line":168,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_what_you_use"
  },
  {
    "comment":"odometry.hpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":0,
      "class":null
    },
    "rule":"haros_plugin_cpplint:no_copyright"
  },
  {
    "comment":"odometry.hpp:21:  Found C system header after C++ system header. Should be: odometry.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":21,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"odometry.hpp:22:  Found C system header after C++ system header. Should be: odometry.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":22,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"odometry.hpp:23:  Found C system header after C++ system header. Should be: odometry.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":23,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"odometry.hpp:24:  Found C system header after C++ system header. Should be: odometry.h, c system, c++ system, other.  [build/include_order] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":24,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"odometry.hpp:30:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":30,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.hpp:39:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":39,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"odometry.hpp:40:  public: should be indented +1 space inside class Odometry  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":40,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"odometry.hpp:42:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& nh  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":42,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"odometry.hpp:44:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":44,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.hpp:44:  Is this a non-const reference? If so, make const or use a pointer: ecl::linear_algebra::Vector3d &pose_update_rates  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":44,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"odometry.hpp:50:  private: should be indented +1 space inside class Odometry  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":50,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"odometry.hpp:63:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":63,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"odometry.hpp:66:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_node",
      "column":null,
      "file":"include/kobuki_node/odometry.hpp",
      "line":66,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  }
]