[
  {
    "comment":"Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project's include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":null,
      "line":null,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/main.cpp",
      "line":53,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"main.cpp:54:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/main.cpp",
      "line":54,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"main.cpp:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/main.cpp",
      "line":58,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"main.cpp:61:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/main.cpp",
      "line":61,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"main.cpp:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/main.cpp",
      "line":62,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"Halstead volume of 14555.8033173",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_volume_above_8000"
  },
  {
    "comment":"Halstead Bugs of 4.85193443908",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":null,
      "class":null
    },
    "rule":"halstead_bugs_above_2"
  },
  {
    "comment":"The exception is caught by value. It could be caught as a (const) reference which is usually recommended in C++.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":156,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":135,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"keyop_core.cpp:42:  Include \"ecl/time.hpp\" not in alphabetical order  [build/include_alpha] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":42,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"keyop_core.cpp:43:  Include \"ecl/exceptions.hpp\" not in alphabetical order  [build/include_alpha] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":43,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"keyop_core.cpp:45:  Include \"kobuki_msgs/MotorPower.h\" not in alphabetical order  [build/include_alpha] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":45,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"keyop_core.cpp:53:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":53,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:62:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":62,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:62:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":62,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"keyop_core.cpp:74:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":74,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:75:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":75,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:75:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":75,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"keyop_core.cpp:79:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":79,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":87,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:101:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":101,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:102:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":102,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:103:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":103,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:104:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":104,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:109:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":109,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:115:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":115,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:131:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":131,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:138:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":138,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:140:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":140,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:145:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":145,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:149:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":149,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":150,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:153:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":153,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:157:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":157,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:166:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":166,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:170:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":170,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:171:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":171,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:182:  Small and focused functions are preferred: KeyOpCore::init() has 71 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"KeyOpCore::init()",
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":182,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"keyop_core.cpp:182:  Small and focused functions are preferred: KeyOpCore::init() has 71 non-comment lines (error triggered by exceeding 50 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"KeyOpCore::init()",
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":182,
      "class":null
    },
    "rule":"max_eloc_50"
  },
  {
    "comment":"keyop_core.cpp:182:  Small and focused functions are preferred: KeyOpCore::init() has 71 non-comment lines (error triggered by exceeding 70 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"KeyOpCore::init()",
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":182,
      "class":null
    },
    "rule":"max_eloc_70"
  },
  {
    "comment":"keyop_core.cpp:194:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":194,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:198:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":198,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:200:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":200,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:201:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":201,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:202:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":202,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:206:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":206,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:207:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":207,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:216:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":216,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:219:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":219,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:220:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":220,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:239:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":239,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:259:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":259,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:261:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":261,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:273:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":273,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:283:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":283,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:292:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":292,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:338:  Small and focused functions are preferred: KeyOpCore::processKeyboardInput() has 48 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]",
    "resources":[],
    "location":{
      "function":"KeyOpCore::processKeyboardInput()",
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":338,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"keyop_core.cpp:352:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":352,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:359:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":359,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:360:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":360,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:366:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":366,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:367:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":367,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:379:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":379,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:387:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":387,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:394:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":394,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:395:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":395,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:404:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":404,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:406:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":406,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:408:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":408,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:411:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":411,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:413:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":413,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:414:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":414,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:423:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":423,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:425:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":425,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:427:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":427,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:430:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":430,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:432:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":432,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:433:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":433,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:442:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":442,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:444:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":444,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:446:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":446,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:449:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":449,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:451:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":451,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:452:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":452,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:461:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":461,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:463:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":463,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:465:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":465,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:468:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":468,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"keyop_core.cpp:470:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":470,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:471:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":471,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:477:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":477,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:479:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":479,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:484:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":484,
      "class":null
    },
    "rule":"haros_plugin_cpplint:else_line"
  },
  {
    "comment":"keyop_core.cpp:485:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":485,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.cpp:490:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":490,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"Function length of 73",
    "resources":[],
    "location":{
      "function":"keyop_core::KeyOpCore::init",
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":86,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"function with cyclomatic complexity 11",
    "resources":[],
    "location":{
      "function":"keyop_core::KeyOpCore::spin",
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":193,
      "class":null
    },
    "rule":"max_cyclomatic_complexity_10"
  },
  {
    "comment":"Function length of 50",
    "resources":[],
    "location":{
      "function":"keyop_core::KeyOpCore::processKeyboardInput",
      "package":"kobuki_keyop",
      "column":null,
      "file":"src/keyop_core.cpp",
      "line":282,
      "class":null
    },
    "rule":"max_function_length_40"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":118,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":118,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"keyop_core.hpp:49:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":49,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"keyop_core.hpp:50:  Include \"ecl/threads.hpp\" not in alphabetical order  [build/include_alpha] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":50,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_order"
  },
  {
    "comment":"keyop_core.hpp:53:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":53,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"keyop_core.hpp:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":60,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.hpp:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":70,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_curly_brace"
  },
  {
    "comment":"keyop_core.hpp:71:  public: should be indented +1 space inside class KeyOpCore  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":71,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"keyop_core.hpp:84:  private: should be indented +1 space inside class KeyOpCore  [whitespace/indent] [3]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":84,
      "class":null
    },
    "rule":"haros_plugin_cpplint:indent_access_mod"
  },
  {
    "comment":"keyop_core.hpp:123:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":123,
      "class":null
    },
    "rule":"haros_plugin_cpplint:whitespace_before_comments"
  },
  {
    "comment":"keyop_core.hpp:96:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"kobuki_keyop",
      "column":null,
      "file":"include/keyop_core/keyop_core.hpp",
      "line":96,
      "class":null
    },
    "rule":"haros_plugin_cpplint:include_what_you_use"
  }
]