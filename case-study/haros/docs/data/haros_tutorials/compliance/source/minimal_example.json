[
  {
    "comment":"Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project's include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config.",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":null,
      "line":null,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:cppcheckRule"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":20,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"publisher.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":0,
      "class":null
    },
    "rule":"haros_plugin_cpplint:no_copyright"
  },
  {
    "comment":"publisher.cpp:5:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":5,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"publisher.cpp:5:  Is this a non-const reference? If so, make const or use a pointer: ros::Publisher &pub  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":5,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"publisher.cpp:11:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":11,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"publisher.cpp:11:  Is this a non-const reference? If so, make const or use a pointer: ros::ServiceClient &client  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":11,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"publisher.cpp:13:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":13,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"publisher.cpp:15:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":15,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"publisher.cpp:15:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":15,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"publisher.cpp:20:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":20,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"publisher.cpp:25:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":25,
      "class":null
    },
    "rule":"haros_plugin_cpplint:max_line_length_80"
  },
  {
    "comment":"publisher.cpp:27:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":27,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"publisher.cpp:29:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":29,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"publisher.cpp:29:  } should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":29,
      "class":null
    },
    "rule":"haros_plugin_cpplint:closing_brace_line"
  },
  {
    "comment":"publisher.cpp:34:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":34,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"MI of 46.8688802642",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/publisher.cpp",
      "line":null,
      "class":null
    },
    "rule":"mi_below_65"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/subscriber.cpp",
      "line":5,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"Found implementation defined integer type.",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/subscriber.cpp",
      "line":17,
      "class":null
    },
    "rule":"haros_plugin_cppcheck:harosIntegerTypes"
  },
  {
    "comment":"subscriber.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/subscriber.cpp",
      "line":0,
      "class":null
    },
    "rule":"haros_plugin_cpplint:no_copyright"
  },
  {
    "comment":"subscriber.cpp:7:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/subscriber.cpp",
      "line":7,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"subscriber.cpp:11:  Is this a non-const reference? If so, make const or use a pointer: minimal_example::GetCounter::Request  &req  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/subscriber.cpp",
      "line":11,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"subscriber.cpp:12:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/subscriber.cpp",
      "line":12,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"subscriber.cpp:12:  Is this a non-const reference? If so, make const or use a pointer: minimal_example::GetCounter::Response &res  [runtime/references] [2]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/subscriber.cpp",
      "line":12,
      "class":null
    },
    "rule":"haros_plugin_cpplint:non_const_ref"
  },
  {
    "comment":"subscriber.cpp:17:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/subscriber.cpp",
      "line":17,
      "class":null
    },
    "rule":"haros_plugin_cpplint:opening_brace_line"
  },
  {
    "comment":"MI of 59.263512194",
    "resources":[],
    "location":{
      "function":null,
      "package":"minimal_example",
      "column":null,
      "file":"src/subscriber.cpp",
      "line":null,
      "class":null
    },
    "rule":"mi_below_65"
  }
]