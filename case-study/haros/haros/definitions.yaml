%YAML 1.1
#Copyright (c) 2016 Andre Santos
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:

#The above copyright notice and this permission notice shall be included in
#all copies or substantial portions of the Software.

#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#THE SOFTWARE.
---
rules:
    max_comment_ratio_30:
        name: Maximum Comment Ratio of 30%
        description: Maximum Comment Ratio of 30%
        scope: file
        tags:
            - metrics
            - nasa-satc
            - comments
            - comment-ratio
    max_comment_ratio_40:
        name: Maximum Comment Ratio of 40%
        description: Maximum Comment Ratio of 40%
        scope: file
        tags:
            - metrics
            - unak
            - comments
            - comment-ratio
    min_comment_ratio_20:
        name: Minimum Comment Ratio of 20%
        description: Minimum Comment Ratio of 20%
        scope: file
        tags:
            - metrics
            - nasa-satc
            - his
            - unak
            - ros
            - comments
            - comment-ratio
    max_cyclomatic_complexity_10:
        name: Maximum Cyclomatic Complexity of 10
        description: Maximum Cyclomatic Complexity of 10
        scope: file
        tags:
            - metrics
            - nasa-satc
            - his
            - cyclomatic-complexity
    max_cyclomatic_complexity_15:
        name: Maximum Cyclomatic Complexity of 15
        description: Maximum Cyclomatic Complexity of 15
        scope: file
        tags:
            - metrics
            - kth
            - ros
            - cyclomatic-complexity
    max_eloc_50:
        name: Maximum Executable Lines of Code of 50
        description: Maximum Executable Lines of Code of 50
        scope: file
        tags:
            - metrics
            - nasa-satc
            - his
            - eloc
            - loc
            - lines-of-code
    max_eloc_70:
        name: Maximum Executable Lines of Code of 70
        description: Maximum Executable Lines of Code of 70
        scope: file
        tags:
            - metrics
            - kth
            - ros
            - eloc
            - loc
            - lines-of-code
    max_function_calls_7:
        name: Maximum Function Calls of 7
        description: Maximum Function Calls of 7
        scope: file
        tags:
            - metrics
            - his
            - function-calls
    max_function_calls_10:
        name: Maximum Function Calls of 10
        description: Maximum Function Calls of 10
        scope: file
        tags:
            - metrics
            - kth
            - ros
            - function-calls
    max_function_parameters_6:
        name: Maximum Function Parameters of 6
        description: Maximum number of function parameters of 6
        scope: function
        tags:
            - code-standards
            - functions
            - parameters
            - hicpp
    max_function_length_40:
        name: Maximum Function Length of 40
        description: Maximum number of function lines of code of 40
        scope: function
        tags:
            - code-standards
            - metrics
            - functions
            - loc
            - lines-of-code
            - google-cpp
            - verifysoft
    max_file_length_400:
        name: Maximum File Length of 400
        description: Maximum number of program lines of code in a file of 400
        scope: file
        tags:
            - metrics
            - loc
            - lines-of-code
            - verifysoft
    max_control_nesting_4:
        name: Maximum Nesting of Control Structures of 4
        description: Maximum Nesting of Control Structures of 4
        scope: file
        tags:
            - metrics
            - his
            - nesting
            - control-structures
            - control-flow
    max_control_nesting_5:
        name: Maximum Nesting of Control Structures of 5
        description: Maximum Nesting of Control Structures of 5
        scope: file
        tags:
            - metrics
            - kth
            - ros
            - nesting
            - control-structures
            - control-flow
    max_static_path_80:
        name: Maximum Estimated Static Path Count of 80
        description: Maximum Estimated Static Path Count of 80
        scope: file
        tags:
            - metrics
            - his
            - static-path
    max_static_path_200:
        name: Maximum Estimated Static Path Count of 200
        description: Maximum Estimated Static Path Count of 200
        scope: file
        tags:
            - metrics
            - hicpp
            - static-path
    max_static_path_250:
        name: Maximum Estimated Static Path Count of 250
        description: Maximum Estimated Static Path Count of 250
        scope: file
        tags:
            - metrics
            - kth
            - ros
            - static-path
    max_coupling_objects_5:
        name: Maximum Coupling Between Objects of 5
        description: Maximum Coupling Between Objects of 5
        scope: file
        tags:
            - metrics
            - nasa-satc
            - ros
            - coupling
            - cbo
    max_immediate_children_10:
        name: Maximum Number of Immediate Children of 10
        description: Maximum Number of Immediate Children of 10
        scope: file
        tags:
            - metrics
            - unak
            - immediate-children
            - noc
    max_weighted_methods_50:
        name: Maximum Weighted Methods per Class of 50
        description: Maximum Weighted Methods per Class of 50
        scope: file
        tags:
            - metrics
            - unak
            - wmc
            - weighted-methods
            - methods
    max_weighted_methods_100:
        name: Maximum Weighted Methods per Class of 100
        description: Maximum Weighted Methods per Class of 100
        scope: file
        tags:
            - metrics
            - nasa-satc
            - ros
            - wmc
            - weighted-methods
            - methods
    max_deepest_inheritance_5:
        name: Maximum Deepest Level of Inheritance of 5
        description: Maximum Deepest Level of Inheritance of 5
        scope: file
        tags:
            - metrics
            - nasa-satc
            - unak
            - dit
            - inheritance
    max_methods_available_20:
        name: Maximum Methods Available in Class of 20
        description: Maximum Methods Available in Class of 20
        scope: file
        tags:
            - metrics
            - nasa-satc
            - ros
            - mac
            - methods-available
            - methods
    mi_below_20:
        name: Maintainability Index Below 20
        description: Maintainability Index below 20
        scope: file
        tags:
            - metrics
            - microsoft
            - maintainability
            - mi
            - maintainability-index
    mi_below_65:
        name: Maintainability Index Below 65
        description: Maintainability Index below 65
        scope: file
        tags:
            - metrics
            - verifysoft
            - maintainability
            - mi
            - maintainability-index
    halstead_volume_above_8000:
        name: Halstead Volume Above 8000
        description: Halstead Volume above 8000
        scope: file
        tags:
            - metrics
            - verifysoft
            - halstead
            - halstead-volume
    halstead_bugs_above_2:
        name: Halstead Bugs Above 2
        description: Halstead Bugs above 2
        scope: file
        tags:
            - metrics
            - verifysoft
            - halstead
            - bugs
            - halstead-bugs
    no_global_names:
        name: No Global ROS Names
        description: Avoid using global ROS names (e.g. '/odom')
        scope: file
        tags:
            - code-standards
            - ros
            - naming
        query:
            "nodes/advertise[is_rosglobal(self.name)] |
             nodes/subscribe[is_rosglobal(self.name)] |
             nodes/service[is_rosglobal(self.name)] |
             nodes/client[is_rosglobal(self.name)]"
metrics:
    comments:
        name: Lines of Comments
        description: Number of lines of comments
        scope: file
        min: 0
    comment_ratio:
        name: Comment Ratio
        description: Ratio between comments and lines of code. How much of the total lines is comments.
        scope: file
        min: 0
        max: 1.0
    coupling:
        name: Coupling Between Objects
        description: Coupling between objects.
        scope: file
        min: 0
    cyclomatic_complexity:
        name: Cyclomatic Complexity
        description: Cyclomatic Complexity is a quantitative measure of the number of linearly independent paths through a program's source code.
        scope: file
        min: 1
    eloc:
        name: Executable Lines of Code
        description: Number of executable lines (e.g. in a function).
        scope: file
        min: 0
    function_calls:
        name: Number of Function Calls
        description: How many functions a function calls.
        scope: function
        min: 0
    function_parameters:
        name: Number of Function Parameters
        description: How many parameters a function takes.
        scope: function
        min: 0
    halstead_bugs:
        name: Number of Delivered Bugs
        description: Estimate of the number of delivered bugs, according to the Halstead metrics.
        scope: file
        min: 0
    halstead_time:
        name: Time Required to Program
        description: Estimate of the time required to change or understand this code.
        scope: file
        min: 0
    halstead_volume:
        name: Halstead's Volume
        description: Halstead's Volume metric, related to the number of operators and operands in a program.
        scope: file
        min: 0
    depth_in_tree:
        name: Deepest Level of Inheritance
        description: This metric calculates how far down a class is declared in the inheritance hierarchy.
        scope: file
        min: 1
    lloc:
        name: Logical Lines of Code
        description: Logical lines of code
        scope: file
        min: 0
    maintainability_index:
        name: Maintainability Index
        description: Maintainability Index is a software metric which measures how maintainable (easy to support and change) the source code is. The maintainability index is calculated as a factored formula consisting of Lines Of Code, Cyclomatic Complexity and Halstead volume.
        scope: file
        min: 0
        max: 100
    methods_available:
        name: Methods Available in Class
        description: Number of exposed methods in a class.
        scope: file
        min: 1
    nested_control:
        name: Nesting of Control Structures
        description: Level of nesting of control structures
        scope: function
        min: 0
    number_of_children:
        name: Number of Immediate Children
        description: Number of Children in Tree (NOC) measures the number of direct subclasses of a class.
        scope: file
        min: 0
    ploc:
        name: Program Lines of Code
        description: Lines of real code (no comments or blank lines).
        scope: file
        min: 0
    sloc:
        name: Source Lines of Code
        description: Source lines of code (code and comments, no blank lines).
        scope: file
        min: 0
    static_path_count:
        name: Estimated Static Path Count
        description: Estimated number of static program paths inside a function
        scope: function
        min: 1
    unique_function_calls:
        name: Number of Distinct Function Calls
        description: How many distinct functions a function calls.
        scope: function
        min: 0
    weighted_methods:
        name: Weighted Methods per Class
        description: The WMC metric is the sum of the complexities of all class methods.
        scope: file
        min: 1
